import discord
from discord.ext import commands

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

# Defines a custom Select containing colour options
# that the user can choose. The callback function
# of this class is called when the user changes their choice
class Dropdown(discord.ui.Select):
    def __init__(self):

        # Set the options that will be presented inside the dropdown
        options = [
            discord.SelectOption(label='KÄ±rmÄ±zÄ±', description='En sevdiÄŸin renk kÄ±rmÄ±zÄ±', emoji='ğŸŸ¥'),
            discord.SelectOption(label='YeÅŸil', description='En sevdiÄŸin renk yeÅŸil', emoji='ğŸŸ©'),
            discord.SelectOption(label='Mavi', description='En sevdiÄŸin renk mavi', emoji='ğŸŸ¦'),
        ]

        # The placeholder is what will be shown when no option is chosen
        # The min and max values indicate we can only pick one of the three options
        # The options parameter defines the dropdown options. We defined this above
        super().__init__(placeholder='En sevdiÄŸiniz renk...', min_values=1, max_values=1, options=options)

    async def callback(self, interaction: discord.Interaction):
        # Use the interaction object to send a response message containing
        # the user's favourite colour or choice. The self object refers to the
        # Select object, and the values attribute gets a list of the user's
        # selected options. We only want the first one.
        await interaction.response.send_message(f'Senin en sevdiÄŸin renk {self.values[0]}')


class DropdownView(discord.ui.View):
    def __init__(self):
        super().__init__()

        # Adds the dropdown to our view object.
        self.add_item(Dropdown())


class Bot(commands.Bot):
    def __init__(self):
        intents = discord.Intents.default()
        intents.message_content = True

        super().__init__(command_prefix=commands.when_mentioned_or('!'), intents=intents)


bot = Bot()


@bot.command()
async def renk(ctx):
    """Sends a message with our dropdown containing colours"""

    # Create the view containing our dropdown
    view = DropdownView()

    # Sending a message containing our view
    await ctx.send('En sevdiÄŸiniz rengi seÃ§in:', view=view)



@bot.event
async def on_ready():
    print(f'{bot.user} a giriÅŸ yaptÄ±k.')
    print("Botunuz Online!")


@bot.command()
async def merhaba(ctx, to: discord.User = commands.parameter(default=lambda ctx: ctx.author)):
    await ctx.send(f'Merhaba {to.mention} :wave:')


@bot.command()
async def heh(ctx, count_heh = 5):
    await ctx.send("he" * count_heh)


@bot.command()
async def gÃ¶rÃ¼ÅŸÃ¼rÃ¼z(ctx):
    await ctx.send(":wave:")


@bot.command()
async def yardÄ±m(ctx):
    await ctx.send("===GirebileceÄŸiniz=Komutlar===")
    await ctx.send("!merhaba")
    await ctx.send("!heh -sayÄ±-")
    await ctx.send("!gÃ¶rÃ¼ÅŸÃ¼rÃ¼z")
    await cts.send("!renk")


@bot.event
async def on_member_join(member):
    await member.send(f"{member} sunucuya hoÅŸgeldin!:wave:")


#Token
bot.run("Gizli Token Buraya")
